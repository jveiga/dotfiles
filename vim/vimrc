
call plug#begin('~/.vim/plugged')

Plug 'lambdatoast/elm.vim', {'for':'elm'}
Plug 'wting/rust.vim', { 'for': 'rust'}
Plug 'jimenezrick/vimerl', { 'for': 'erlang'}
Plug 'itchyny/landscape.vim'
Plug 'cespare/vim-toml', { 'for': 'toml'}
Plug 'Chiel92/vim-autoformat'
Plug 'google/vim-maktaba', {'for': 'python'}
Plug 'google/vim-codefmt', {'for': 'python'}
" Also add Glaive, which is used to configure codefmt's maktaba flags. See
" `:help :Glaive` for usage.
Plug 'google/vim-glaive', {'for': 'python'}

Plug 'fireplace.vim', {'for': 'clojure'}
Plug 'kylef/apiblueprint.vim'
Plug 'ag.vim'
Plug 'fugitive.vim'
Plug 'benekastah/neomake'
Plug 'jpalardy/vim-slime'

Plug 'tpope/vim-endwise'
Plug 'Chiel92/vim-autoformat'
Plug 'surround.vim'
Plug 'tpope/vim-vinegar'
Plug 'itchyny/lightline.vim'
"Plug 'wookiehangover/jshint.vim', {'for': 'javascript'}
Plug 'Shougo/unite.vim'
Plug 'vimwiki/vimwiki'
Plug 'Shougo/vimproc', {
      \     'build' : {
      \     'mac' : 'make -f make_mac.mak',
      \     'unix' : 'make -f make_unix.mak',
      \},
      \}
Plug 'junegunn/goyo.vim'
Plug 'fatih/vim-go', { 'for': 'go'}
Plug 'vim-scripts/taglist.vim'

" Colorschemes
Plug 'morhetz/gruvbox'
Plug 'tpope/vim-dispatch'
Plug 'elixir-lang/vim-elixir'
Plug 'tpope/vim-rails'
Plug 'scrooloose/nerdcommenter'
"
Plug 'Tabular'
Plug 'matchit.zip'
Plug 'editorconfig-vim'
Plug 'roman/golden-ratio'

call plug#end()

set path=**
set suffixesadd=.rb,.yml,.js
set nocompatible
set wildmode=full
set wildmenu

" allow plugins by file type
filetype on
filetype plugin on
filetype indent on
" filetype plugin indent on     " required!

" tabs and spaces handling
set expandtab
set tabstop=2
set softtabstop=2
set shiftwidth=2

" always show status bar
set ls=2

" incremental search
set incsearch "Highlight as you type
set hidden    "Handle multiple buffers better
set ignorecase " Case-insensitive searching.
set smartcase " But case-sensitive if expression contains a capital letter.
set swapfile
set directory=~/tmp,/var/tmp,/tmp

" highlighted search results
set hlsearch

" line numbers
set number

syntax on

"set t_Co=256
scriptencoding utf-8
set encoding=utf-8

" After write, remove trailling whitespaces
autocmd BufWritePre * :%s/\s\+$//e

" Remove scrollbars
set guioptions=aei

set backspace=indent,eol,start

" Required:
filetype plugin indent on

colorscheme landscape
let g:lightline = {
      \ 'colorscheme': 'landscape',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'readonly', 'filename', 'modified' ]]
      \ },
      \ 'component_visible_condition': {
      \   'readonly': '(&filetype!="help"&& &readonly)',
      \   'modified': '(&filetype!="help"&&(&modified||!&modifiable))'
      \ },
      \ }
"""" lightline.vim""""""""
set guifont=Inconsolata\ for\ Powerline:h15
let g:Powerline_symbols = 'fancy'
set encoding=utf-8
set t_Co=256
set fillchars+=stl:\ ,stlnc:\
"set term=xterm-256color
set termencoding=utf-8

let g:unite_source_grep_command = 'ag'
nmap ,f :Unite -no-split file file_rec -start-insert <CR>
nmap ,b :Unite -no-split buffer -start-insert <CR>

call unite#filters#matcher_default#use(['matcher_fuzzy'])
call unite#filters#sorter_default#use(['sorter_rank'])

" TagList
let Tlist_Use_Right_Window=1
let Tlist_Enable_Fold_Column=0
let Tlist_Show_One_File=1 " especially with this one
let Tlist_Compact_Format=1

" Vim-Slime
let g:slime_target = "tmux"


" AutoFormat
"let g:formatdef_rustfmt = '"rustfmt"'
"let g:formatters_rust = ['rustfmt']

