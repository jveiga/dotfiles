" no vi-compatible
set nocompatible

" Setting up Vundle - the vim plugin bundler
let iCanHazVundle=1
let vundle_readme=expand('~/.vim/bundle/vundle/README.md')
if !filereadable(vundle_readme)
  echo "Installing Vundle..."
  echo ""
  silent !mkdir -p ~/.vim/bundle
  silent !git clone https://github.com/gmarik/vundle ~/.vim/bundle/vundle
  let iCanHazVundle=0
endif

" required for vundle
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required!
Bundle 'gmarik/vundle'

" Bundles from GitHub repos:

" Code commenter
Bundle 'tpope/vim-vinegar'
" Vim vinegar
Bundle 'scrooloose/nerdcommenter'
" Class/module browser
Bundle 'majutsushi/tagbar'
" Code and files fuzzy finder
"Bundle 'kien/ctrlp.vim'
" Git integration
Bundle 'tpope/vim-fugitive'
" Powerline
Bundle 'Lokaltog/vim-powerline'
" Terminal Vim with 256 colors colorscheme
Bundle 'fisadev/fisa-vim-colorscheme'
" OmniCache
Bundle 'Shougo/neocomplete'
" Zencoding abbreviations
Bundle 'mattn/zencoding-vim'
" Zenburn
Bundle 'vexxor/zenburn.vim'
" Surround
Bundle 'tpope/vim-surround'
" Elixir
Bundle 'elixir-lang/vim-elixir'
Bundle 'wting/rust.vim'
" Bundles from vim-scripts repos
Bundle 'tpope/vim-dispatch'
Bundle 'godlygeek/tabular'
Bundle 'rails.vim'
Bundle 'rking/ag.vim'
Bundle 'go.vim'
Bundle 'Shougo/vimproc.vim'

Bundle 'unite.vim'

" Autocompletition
Bundle 'AutoComplPop'
" Search results counter
Bundle 'IndexedSearch'
" XML/HTML tags navigation
Bundle 'matchit.zip'
" Gvim colorscheme
Bundle 'Wombat'
"Vimwiki
Bundle 'vimwiki'
"Solarized
Bundle 'altercation/vim-colors-solarized'
"Muon term
Bundle 'gregsexton/Muon'
"Superman Gvim
Bundle 'tristen/superman'
" Jellybeans
Bundle 'nanotech/jellybeans.vim'
" Css colors
Bundle 'css_color.vim'
" Railscasts theme
Bundle 'Railscasts-Theme-GUIand256color'
" Sexy railscasts
Bundle 'sexy-railscasts'
" Hybrid theme
Bundle 'w0ng/vim-hybrid'
" Puppeties
Bundle 'rodjek/vim-puppet'
" Installing plugins the first time
if iCanHazVundle == 0
  echo "Installing Bundles, please ignore key map error messages"
  echo ""
  :BundleInstall
endif

" allow plugins by file type
filetype plugin on
filetype indent on

" tabs and spaces handling
set expandtab
set tabstop=2
set softtabstop=2
set shiftwidth=2

" tablength exceptions
autocmd FileType html setlocal shiftwidth=2 tabstop=2
autocmd FileType javascript setlocal shiftwidth=2 tabstop=2

" always show status bar
set ls=2

" incremental search
set incsearch "Highlight as you type
set hidden    "Handle multiple buffers better
set ignorecase " Case-insensitive searching.
set smartcase " But case-sensitive if expression contains a capital letter.
set noswapfile

" highlighted search results
set hlsearch

" line numbers
set number

" save as sudo
ca w!! w !sudo tee "%"

" colors and settings of autocompletition
highlight Pmenu ctermbg=4 guibg=LightGray

" simple recursive grep
command! -nargs=1 RecurGrep lvimgrep /<args>/gj ./**/*.* | lopen | set nowrap
command! -nargs=1 RecurGrepFast exec 'lgrep! <q-args> ./**/*.*' | lopen
nmap ,R :RecurGrep 
nmap ,r :RecurGrepFast 

" use 256 colors when possible
"if &term =~? 'mlterm\|xterm\|screen-256'
let &t_Co = 256
"endif

if has('gui_running')
  set guifont=Inconsolata\ Medium\ 12
  colorscheme superman
  set guioptions=aei
else
  colorscheme jellybeans
  set guifont=Droid\ Sans\ Mono\ 10
endif

" when scrolling, keep cursor 3 lines away from screen border
set scrolloff=5

" autocompletition of files and commands behaves like shell
" (complete only the common part, list the options that match)
set wildmode=longest,list:longest

let g:indexed_search_colors=1

" to use fancy symbols for powerline, uncomment the following line and use a
" patched font (more info on the README.rst)
let g:Powerline_symbols = 'unicode'

" Intuitive backspacing.
set backspace=indent,eol,start 

"map Y to copy until end of line
map Y y$

"MiniBufExpl
hi MBEVisibleActive guifg=#A6DB29 guibg=fg
hi MBEVisibleChangedActive guifg=#F1266F guibg=fg
hi MBEVisibleChanged guifg=#F1266F guibg=fg
hi MBEVisibleNormal guifg=#5DC2D6 guibg=fg
hi MBEChanged guifg=#CD5907 guibg=fg
hi MBENormal guifg=#808080 guibg=fg

" Barebones
set path=**
set suffixesadd=.rb,.yml,ru
set nocompatible
set wildmenu

autocmd BufRead,BufNewFile *.go set filetype=go
autocmd BufRead,BufNewFile *.exs,*ex set filetype=elixir
autocmd BufRead,BufNewFile *.rs set filetype=rust

" Neocomplete
let g:neocomplete#enable_at_startup = 1

" Unite.vim
nmap ,f :Unite file file_rec <CR>
let g:unite_enable_start_insert = 1
let g:unite_split_rule = "botright"
let g:unite_force_overwrite_statusline = 0
let g:unite_winheight = 10

call unite#filters#matcher_default#use(['matcher_fuzzy'])
call unite#filters#sorter_default#use(['sorter_rank'])

