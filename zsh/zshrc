# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/jveiga/.zshrc'

autoload -Uz compinit
compinit
autoload -U select-word-style
select-word-style bash

export WORDCHARS='.-'
# End of lines added by compinstall


source $HOME/.antigen.zsh
#antigen use lambda
antigen bundle git
antigen apply

. $HOME/.asdf/asdf.sh
#ZSH = arrow
# The following lines were added by compinstall

zstyle ':completion:*' completer _complete _ignored _approximate
zstyle :compinstall filename '/home/jveiga/.zshrc'

#autoload -Uz compinit
# compinit
# autoload -Uz promptinit
# promptinit
# prompt suse
export PROMPT_COMMAND="$PROMPT_COMMAND; history -a"
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt autocd
#set -o vi
bindkey -e
# End of lines configured by zsh-newuser-install
alias ls='ls -h --color=auto'
alias rm='rm -v'
alias cp='cp -v'
alias ssh='ssh -vv'
alias casa='ssh casa'
alias tania='ssh tania'
alias rsync='rsync --progress -vvat'
alias sftp='sftp -vv'
alias mv='mv -v'
# alias gc='git commit -S'
alias grep='grep --color=auto'
alias v='vim'
alias p='python'
alias s='sudo'
alias sa='sudo apt-get'
alias l='ls'
alias vim='nvim'

export EDITOR='nvim'
#export EDITOR='gvim -f'
export SVN_EDITOR='vim --nofork -f -c "4,\$!cut -c-5 --complement | xargs svn diff --no-diff-deleted -x --ignore-eol-style" -c "set syntax=diff" +0'
# Less Colors for Man Pages
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline0
[ -n "$TMUX" ] && export TERM=xterm-256color
[[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator
export TERM=rxvt-unicode


export PATH=$PATH:/usr/local/go/bin
export PATH=$PATH:$HOME/.bin/

#PLUGINS( github )

# From https://pastebin.com/raw/Kzeb31U0 
# requires jq
enum_crtsh(){ curl -s "https://crt.sh/?q=%25.$1"  | sed 's/<\/\?[^>]\+>//g' | sort -u | grep -v "LIKE" | grep -v "crt.sh" | grep $1 | sed 's/    //' | grep -v "*" | grep $1 }
enum_certspotter(){ curl -s "https://certspotter.com/api/v0/certs?domain=$1"  | jq '.[].dns_names[]' | sed 's/\"//g' | sed 's/\*\.//g' | uniq | grep $1 }
enum_hackertarget(){ curl -s "https://api.hackertarget.com/hostsearch/?q=$1" | cut -d',' -f1 | sort -u  }
enum_commoncrawl(){ curl -sX GET "http://index.commoncrawl.org/CC-MAIN-2018-22-index?url=*.$1&output=json" | jq -r .url | sort -u }


function j(){
	java -jar "$@" &
	disown
}

eval "$(starship init zsh)"

eval "$(zoxide init zsh)"

# export RUSTFLAGS="-C target-cpu=native"
# alias nvim="nvim.appimage"
alias vim=nvim

source /home/jveiga/.config/skim/completion.zsh
source /home/jveiga/.config/skim/key-bindings.zsh
source /home/jveiga/.config/broot/launcher/bash/br

alias python=python3
export FLYCTL_INSTALL="/home/jveiga/.fly"
export PATH="$FLYCTL_INSTALL/bin:$PATH"

alias minicom='minicom -con'

function jqsk {
sk --tac --ansi --regex  --query . --multi --interactive --cmd '{}' \
--bind 'enter:select-all+accept,ctrl-y:select-all+execute-silent(for line in {+}; do echo $line; done | pbcopy)+deselect-all' \
--cmd-history=${HOME}/.sk_history --cmd-history-size=100000 \
--no-clear-if-empty \
--cmd-query "cat $1 | jq --raw-output --color-output --exit-status '.'"
}

function gobinaries {
	go install github.com/alexkohler/prealloc@latest
	go install github.com/ashanbrown/makezero@latest
	go install github.com/cweill/gotests/gotests@latest
	go install github.com/josharian/impl@latest
	go install github.com/go-delve/delve/cmd/dlv@latest
	go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
	go install golang.org/x/tools/gopls@latest 
}

function cargo_bins {
	bins=(alacritty bacon bandwhich bat bb bindgen bingrep bottom broot cbindgen du-dust exa fclones fd-find flamegraph gfold gitui gping grcov hx hyperfine just jyx miniserve nu oha ouch procs ripgrep runiq sccache skim starship tokei topgrade trunk watchexec-cli xd zoxide)
	for i in $bins; do 
		cargo install $i
	done
	cargo install --git https://github.com/jakwai01/lurk --tag v0.2.9
	cargo install --git https://github.com/ogham/dog --tag v0.1.0
}
